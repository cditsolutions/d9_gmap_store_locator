<?php

/**
 * @file
 * Contains store_locator.module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\store_locator\Helper\GoogleApiKeyHelper;

/**
 * Implements hook_theme().
 */
function store_locator_theme($existing, $type, $theme, $path) {

  return [
    'location_data' => [
      'variables' => ['location_search' => NULL],
      'file' => 'store_locator.theme.inc',
    ],
  ];

}

/**
 * Implements hook_entity_view_alter().
 */
function store_locator_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($build['#view_mode'] == 'full' && !empty($build['name']['#object'])) {

    $lat = $build['name']['#object']->get('latitude')->value;
    $lng = $build['name']['#object']->get('longitude')->value;
    $lat_lng = ['lat' => (float) $lat, 'lng' => (float) $lng];
    $build['#attached']['drupalSettings']['store_locator']['latlng'] = $lat_lng;
    $build['map']['#markup'] = '<div id="map" class="loc-map store-locator-page-view"></div>';
    $build['map']['#weight'] = 100;
    $build['#attached']['library'][] = 'store_locator/store_locator.page';
    $googleMapKey = GoogleApiKeyHelper::getGoogleApiKey();
    $build['#attached']['html_head'][] = [$googleMapKey, 'googleMapKey'];
  }
}
